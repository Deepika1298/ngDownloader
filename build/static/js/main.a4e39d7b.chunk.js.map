{"version":3,"sources":["components/common/Header.js","components/pages/Home.js","components/pages/Search.js","components/App.js","registerServiceWorker.js","index.js"],"names":["Header","react_default","a","createElement","AppBar","position","Toolbar","IconButton","color","aria-label","Icon_default","Typography","variant","react_router_dom","to","Component","Home","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","videoURL","e","setState","target","value","history","push","_this2","style","textAlign","fontSize","paddingTop","component","TextField","id","label","placeholder","margin","width","maxWidth","onChange","handleSearchValueChange","Button","onClick","getDownloadLinks","rel","href","textDecoration","queryString","require","Search","loadingState","videoInformation","parse","location","search","getURLParams","fetch","then","response","json","data","console","log","Grid","container","item","xs","sm","padding","src","thumbnail","alt","title","renderVideoDownloadSection","_this3","Table","TableHead","TableRow","TableCell","align","TableBody","formats","map","format","key","format_id","scope","format_note","url","download","ext","getCurrentState","CircularProgress","renderVideoDetails","App","common_Header","react_router","exact","path","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","ReactDOM","render","components_App","document","getElementById","URL","process","origin","addEventListener","concat","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.a4e39d7b.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport Icon from '@material-ui/core/Icon/Icon';\n\nclass Header extends Component {\n    render() {\n        return (\n            <AppBar position=\"static\">\n                <Toolbar>\n                    <IconButton color=\"inherit\" aria-label=\"Menu\">\n                        <Icon>cloud_download</Icon>\n                    </IconButton>\n                    <Typography variant=\"title\" color=\"inherit\">\n                        <Link to={'/'}>ngDownloader</Link>\n                    </Typography>\n                </Toolbar>\n            </AppBar>\n        );\n    }\n}\n\nexport default Header;","import React, {Component} from 'react';\nimport Icon from '@material-ui/core/Icon/Icon';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nclass Home extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            videoURL: ''\n        };\n    }\n\n    handleSearchValueChange(e) {\n        this.setState({\n            videoURL: e.target.value,\n        })\n    }\n\n    getDownloadLinks() {\n        this.props.history.push('/search?videoURL=' + this.state.videoURL)\n    }\n\n    render() {\n        return (\n            <div style={{textAlign: 'center'}}>\n                <div>\n                    <Icon style={{fontSize: 200, color: '#283593', paddingTop: '5%'}}>cloud_download</Icon>\n                </div>\n                <div>\n                    <Typography variant=\"h1\" component=\"h1\" style={{color: '#283593'}}>\n                        ngDownloader\n                    </Typography>\n                </div>\n                <div>\n                    <TextField id=\"video-url\"\n                               label=\"\"\n                               placeholder=\"Example: https://www.youtube.com/watch?v=J1uxBvrPCig\"\n                               margin=\"normal\"\n                               style={{width: '80%', maxWidth: 700}}\n                               onChange={(e) => this.handleSearchValueChange(e)}/>\n                </div>\n                <div>\n                    <Button variant=\"contained\"\n                            color=\"primary\"\n                            style={{margin: 5}}\n                            onClick={() => this.getDownloadLinks()}>\n                        Get Download Links\n                    </Button>\n                    <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://manishbisht.github.io\" style={{textDecoration: 'none', color: 'inherit'}}>\n                        <Button variant=\"contained\" style={{margin: 5}}>About Developer</Button>\n                    </a>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Home;","import React, {Component} from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from \"@material-ui/core/Typography\";\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Button from \"@material-ui/core/Button\";\nconst queryString = require('query-string');\n\nclass Search extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            loadingState: 0,\n            videoInformation: {}\n        };\n    }\n\n    getURLParams() {\n        return queryString.parse(this.props.location.search);\n    }\n\n    componentWillMount() {\n        this.getDownloadLinks();\n    }\n\n    componentWillUnmount() {\n        this.setState({\n            loadingState: 0,\n            videoInformation: {}\n        });\n    }\n\n    getDownloadLinks() {\n        let { videoURL } = this.getURLParams();\n        let URL = 'https://s1jv2959n8.execute-api.us-east-1.amazonaws.com/v1?q=' + videoURL;\n        fetch(URL).then((response) => {\n            response.json().then((data) => {\n                console.log(data);\n                this.setState({\n                    videoInformation: data,\n                    loadingState: 1,\n                })\n            });\n        });\n    }\n\n    renderVideoDetails() {\n        return (\n            <div>\n                <Grid container>\n                    <Grid item xs={12} sm={5} style={{padding: 10}}>\n                        <img src={this.state.videoInformation.thumbnail}\n                             alt={this.state.videoInformation.title}\n                             style={{width: '100%'}} />\n                    </Grid>\n                    <Grid item xs={12} sm={7} style={{padding: 10}}>\n                        <div>\n                            <Typography variant=\"h5\" component=\"h5\">\n                                {this.state.videoInformation.title}\n                            </Typography>\n                        </div>\n                    </Grid>\n                </Grid>\n                {this.renderVideoDownloadSection()}\n            </div>\n        );\n    }\n\n    renderVideoDownloadSection() {\n        return (\n            <div>\n                <Table>\n                    <TableHead>\n                        <TableRow>\n                            <TableCell>Video Quality</TableCell>\n                            <TableCell align=\"right\">Video Note</TableCell>\n                            <TableCell align=\"right\">Download</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {this.state.videoInformation.formats.map((format) => (\n                            <TableRow key={format.format_id}>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    {format.format}\n                                </TableCell>\n                                <TableCell align=\"right\">{format.format_note}</TableCell>\n                                <TableCell align=\"right\">\n                                    <a href={format.url} target=\"_blank\" rel=\"noopener noreferrer\"\n                                       download={this.state.videoInformation.title + '-' + format.format_note + '.' + format.ext}\n                                       style={{textDecoration: 'none', color: 'inherit'}}>\n                                        <Button variant=\"contained\"\n                                                color=\"primary\">\n                                            Download\n                                        </Button>\n                                    </a>\n                                </TableCell>\n                            </TableRow>\n                        ))}\n                    </TableBody>\n                </Table>\n            </div>\n        );\n    }\n\n    getCurrentState() {\n        return this.state.loadingState;\n    }\n\n    render() {\n        if (this.getCurrentState() === 0) {\n            return (\n                <div style={{textAlign: 'center', paddingTop: '20%'}}>\n                    <CircularProgress /><br /><br />\n                    Fetching video ...\n                </div>\n            );\n        }\n        return (\n            <div>\n                {this.renderVideoDetails()}\n            </div>\n        );\n    }\n}\n\nexport default Search;","import React, { Component } from 'react';\nimport { HashRouter, Route} from 'react-router-dom'\nimport Header from './common/Header'\nimport Home from './pages/Home'\nimport Search from './pages/Search'\n\nclass App extends Component {\n    render() {\n        return (\n            <HashRouter>\n                <div>\n                    <Header />\n                    <div>\n                        <Route exact path=\"/search\" component={Search} />\n                        <Route exact path=\"/\" component={Home} />\n                    </div>\n                </div>\n            </HashRouter>\n        );\n    }\n}\n\nexport default App;","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './components/App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}